// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// PRISMA Default //

// model User {
//   id    Int     @id @default(autoincrement())
//   email String  @unique
//   name  String?
//   posts Post[]
// }

// model Post {
//   id        Int     @id @default(autoincrement())
//   title     String
//   content   String?
//   published Boolean @default(false)
//   author    User    @relation(fields: [authorId], references: [id])
//   authorId  Int
// }



model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  role String
  posts Post[]
}

model Category {
  id             Int      @id @default(autoincrement())
  name           String
  parentCategory Int
  createdDate    DateTime @default(now())
  createdBy      Int
  posts          Post[]
}

// My post
model Post {
  id            Int      @id @default(autoincrement())
  title         String
  description   String
  keywords      String[]
  content       String
  images        String[]
  category      Category @relation(fields: [categoryId], references: [id])
  categoryId    Int
  createdDate   DateTime
  createdByUser User     @relation(fields: [createdBy], references: [id])
  createdBy     Int
}

model Project {
  id           Int      @id @default(autoincrement())
  name         String
  startDate    DateTime
  completeDate DateTime
  status       String
  description  String
  tools        String[]
  images       String[]
  link         String
  github       String
}


model SkillType {
  id   Int    @id @default(autoincrement())
  name String
  skills Skill[]
}

model Skill {
  id   Int     @id @default(autoincrement())
  name String
  icon String?
  type SkillType @relation(fields: [skillTypeId], references: [id])
  skillTypeId Int
  link String
}


// Will be used across models (Post, Projects)
// and will have the actual image url uploaded to image storage
model Image {
  id  Int    @id @default(autoincrement())
  src String
}
